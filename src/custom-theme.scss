//@use '~@angular/material/index' as mat;
@import '~@angular/material/theming';
//@import "~@angular/material/theming";

@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$candy-app-theme: mat-light-theme((
  color: (
    primary: $candy-app-primary,
    accent: $candy-app-accent,
    warn: $candy-app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
//
$angular-primary: mat-palette($mat-teal, 500, 100, 900);
$angular-accent: mat-palette($mat-pink, A200, A100, A400);
//
$angular-warn: mat-palette($mat-red);
//
//$angular-default-theme: mat.define-light-theme(
//    (
//      color: (
//        primary: $angular-primary,
//        accent: $angular-accent,
//        warn: $angular-warn,
//      ),
//    )
//);
//
//@include mat.all-component-themes($angular-default-theme);
//
$angular-dark-theme: mat-dark-theme(
    (
      color: (
        primary: $angular-primary,
        accent: $angular-accent,
        warn: $angular-warn,
      ),
    )
);

.darkMode {
  @include angular-material-color($angular-dark-theme);
}
